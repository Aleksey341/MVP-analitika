// scripts/create-default-users.js
// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

require('dotenv').config();
const bcrypt = require('bcrypt');
const { pool } = require('../config/database');

async function createDefaultUsers() {
  const client = await pool.connect();
  try {
    console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...\n');

    // 1. –°–æ–∑–¥–∞—ë–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminPassword = 'admin123'; // –°–ú–ï–ù–ò–¢–ï –ù–ê –ë–ï–ó–û–ü–ê–°–ù–´–ô!
    const adminHash = await bcrypt.hash(adminPassword, 12);

    await client.query(`
      INSERT INTO users (municipality_id, password_hash, role, is_active, password_reset_required, last_password_change)
      VALUES (NULL, $1, 'admin', TRUE, TRUE, NOW())
      ON CONFLICT DO NOTHING
    `, [adminHash]);

    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω:');
    console.log('   –õ–æ–≥–∏–Ω: admin');
    console.log(`   –ü–∞—Ä–æ–ª—å: ${adminPassword}`);
    console.log('   ‚ö†Ô∏è  –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ!\n');

    // 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–æ–≤
    const { rows: municipalities } = await client.query(`
      SELECT id, name FROM municipalities ORDER BY id
    `);

    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–æ–≤: ${municipalities.length}\n`);

    // 3. –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–∞
    const defaultPassword = 'temp123'; // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö
    const defaultHash = await bcrypt.hash(defaultPassword, 12);

    for (const mun of municipalities) {
      try {
        await client.query(`
          INSERT INTO users (municipality_id, password_hash, role, is_active, password_reset_required, last_password_change)
          VALUES ($1, $2, 'operator', TRUE, TRUE, NOW())
          ON CONFLICT (municipality_id) DO NOTHING
        `, [mun.id, defaultHash]);

        console.log(`‚úÖ ${mun.name} (ID: ${mun.id})`);
      } catch (err) {
        if (err.code === '23505') {
          console.log(`‚è≠Ô∏è  ${mun.name} (ID: ${mun.id}) - —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          console.error(`‚ùå ${mun.name} (ID: ${mun.id}) - –æ—à–∏–±–∫–∞:`, err.message);
        }
      }
    }

    console.log(`\n‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
    console.log(`\nüìù –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–æ–≤: ${defaultPassword}`);
    console.log('‚ö†Ô∏è  –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ!');
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('   1. –°–æ–æ–±—â–∏—Ç–µ –∫–∞–∂–¥–æ–º—É –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç—É –∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å');
    console.log('   2. –õ–æ–≥–∏–Ω = ID –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –≤—ã—à–µ');
    console.log('   3. –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç —Å–º–µ–Ω—É –ø–∞—Ä–æ–ª—è');

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err);
    process.exit(1);
  } finally {
    client.release();
    await pool.end();
  }
}

createDefaultUsers();
