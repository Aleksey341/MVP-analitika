// scripts/import-projects-data.js
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑ Excel –≤ –ë–î

'use strict';

const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({ connectionString: process.env.DATABASE_URL });

// –î–∞–Ω–Ω—ã–µ –∏–∑ Excel —Ñ–∞–π–ª–∞ (—Å–µ–Ω—Ç—è–±—Ä—å 2025)
const projectsData = {
  // –ú–ñ–ö–•
  mjkh: [
    {
      name: '–ü–µ—Ä–µ—Å–µ–ª–µ–Ω–∏–µ –∏–∑ –ê–ñ–§',
      dynamic_text: '0,8 —Ç—ã—Å. –∫–≤. –º',
      dynamic_value: 0.8,
      plan_text: '2025 - 0,48 —Ç—ã—Å.–∫–≤.–º.\n2026 - 2,0 —Ç—ã—Å.–∫–≤.–º.'
    },
    {
      name: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (–¥–µ—Ç–∏-—Å–∏—Ä–æ—Ç—ã)',
      dynamic_text: '. –ó–∞—è–≤–ª–µ–Ω–∏–π: 35 —à—Ç.\n. –í—ã–¥–∞–Ω–æ: 33 —à—Ç.\n. –û–ø–ª–∞—á–µ–Ω–æ: 19 —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –Ω–∞ —Å—É–º–º—É 67,61 –º–ª–Ω —Ä—É–±. (57,46%)',
      dynamic_value: 57.46,
      plan_text: '32 —à—Ç. –Ω–∞ —Å—É–º–º—É 117,7 –º–ª–Ω —Ä—É–±.'
    },
    {
      name: '–ó–∞–∫—É–ø–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä –¥–ª—è –¥–µ—Ç–µ–π-—Å–∏—Ä–æ—Ç',
      dynamic_text: '. –§–∞–∫—Ç: 312 —à—Ç. (90%)\n. –ù–∞ —Å—Ç–∞–¥–∏–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏—è: 11 —à—Ç.\n. –ö–∞—Å—Å–∞: 559,8 –º–ª–Ω —Ä—É–±. (45%)',
      dynamic_value: 90,
      plan_text: '348 –∫–≤. –Ω–∞ —Å—É–º–º—É 1 255,2 –º–ª–Ω —Ä—É–±.'
    },
    {
      name: '–§–ü ¬´–§–ö–ì–°¬ª –§–ë',
      dynamic_text: '–ö–∞—Å—Å–∞: 183,4 –º–ª–Ω —Ä—É–±. (62%)',
      dynamic_value: 62,
      plan_text: '297,12 –º–ª–Ω. —Ä—É–±. \n65 –µ–¥.'
    },
    {
      name: '–§–ü ¬´–§–ö–ì–°¬ª –û–ë',
      dynamic_text: '. –ö–∞—Å—Å–∞: 351 –º–ª–Ω —Ä—É–±. (89%)\n. 211,5 –º–ª–Ω —Ä—É–±. (54%)',
      dynamic_value: 89,
      plan_text: '394,2 –º–ª–Ω. —Ä—É–±'
    },
    {
      name: '–ö–æ–Ω–∫—É—Ä—Å –ú–ì –∏ –ò–ü –§–ë',
      dynamic_text: '–ö–∞—Å—Å–∞: 107 –º–ª–Ω —Ä—É–±. (52%)',
      dynamic_value: 52,
      plan_text: '3  –µ–¥. /206,3 –º–ª–Ω. —Ä—É–±.'
    },
    {
      name: '–§–ü ¬´–ú–ö–ò¬ª',
      dynamic_text: '. –ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ: 9 –µ–¥. (100%) / 305,1 –º–ª–Ω —Ä—É–±. (79,5%)\n. –≠–∫–æ–Ω–æ–º–∏—è: 78,5 –º–ª–Ω —Ä—É–±.\n. –ö–∞—Å—Å–∞: 119,7 –º–ª–Ω —Ä—É–±. (31%)',
      dynamic_value: 100,
      plan_text: '9 –µ–¥. / 383,6 –º–ª–Ω. —Ä—É–±'
    },
    {
      name: '–§–ù–ë',
      dynamic_text: '. –ö–∞—Å—Å–∞: 177,4 –º–ª–Ω —Ä—É–±. (14,4%)\n. –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: 20,11% (+0,1%)',
      dynamic_value: 20.11,
      plan_text: '1 –µ–¥. / 1231,1 –º–ª–Ω. —Ä—É–±'
    },
    {
      name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –í–° –∏ –í–û',
      dynamic_text: '. –ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ: 113 –µ–¥. (86,9%) / 518,3 –º–ª–Ω —Ä—É–±. (94,3%)\n. –ö–∞—Å—Å–∞: 124,5 –º–ª–Ω —Ä—É–±. (22,7%)',
      dynamic_value: 86.9,
      plan_text: '130 –µ–¥. / 549,5 –º–ª–Ω. —Ä—É–±'
    },
    {
      name: '–°–ö–ö',
      dynamic_text: '–ö–∞—Å—Å–∞: 158,5 –º–ª–Ω —Ä—É–±. (76,1%)\n–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: 75% (+11%)',
      dynamic_value: 75,
      plan_text: '2 –µ–¥. / 208,3 –º–ª–Ω. —Ä—É–±.'
    },
    {
      name: '–ì–æ—Å–¥–æ–ª–≥',
      dynamic_text: '. –ö–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ: 12 –µ–¥. (75%) / 499,5 –º–ª–Ω —Ä—É–±. (58,5%)\n. –ö–∞—Å—Å–∞: 92,6 –º–ª–Ω —Ä—É–±. (10,8%)',
      dynamic_value: 75,
      plan_text: '16 –µ–¥ . / 853,2 –º–ª–Ω. —Ä—É–±.'
    }
  ],
  // –ú–°–∏–ê
  msia: [
    {
      name: '–í–≤–æ–¥ –∂–∏–ª—å—è',
      dynamic_text: '37,9% (+5,9%)',
      dynamic_value: 37.9,
      plan_text: '880,0 —Ç—ã—Å. –ú¬≤'
    },
    {
      name: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä–∞–¥–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
      dynamic_value: 41,
      plan_text: '4 160 –º–ª–Ω.'
    },
    {
      name: '–ö–∞—Å—Å–∞ –ø–æ –æ–±—ä–µ–∫—Ç–∞–º –û–ö–£ –£–ö–°',
      dynamic_text: '40%',
      dynamic_value: 40,
      plan_text: '72 –º–ª–Ω.'
    },
    {
      name: '–ö–∞—Å—Å–∞ –ª–∏–º–∏—Ç–æ–≤ –û–ë 2025 –Ω–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç',
      dynamic_text: '62% (+17%)',
      dynamic_value: 62,
      plan_text: '190 –º–ª–Ω.'
    }
  ],
  // –ú–¢–∏–î–•
  mtidh: [
    {
      name: '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –ì–≠–¢',
      dynamic_value: 75
    },
    {
      name: '–ò–î–ñ',
      dynamic_text: '58,6% (+1,6%)',
      dynamic_value: 58.6
    },
    {
      name: '–ö–†–°–¢',
      dynamic_value: 78
    },
    {
      name: '–°—É–±—Å–∏–¥–∏–∏ –ú–û',
      dynamic_text: ' 52% (+3%)',
      dynamic_value: 52
    },
    {
      name: '–ò–¢–°',
      dynamic_value: 100
    }
  ],
  // –ú–≠–∏–¢
  meit: [
    {
      name: '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è —É–ª–∏—á–Ω–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è, –°–ù–¢',
      task_value: 16.93,
      contract_value: 8.82,
      contract_percent: 52.1,
      fact_value: 7.63,
      fact_percent: 45.1,
      objects_plan: 25,
      objects_fact: 14
    },
    {
      name: '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è —Ç–µ–ø–ª–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è',
      task_value: 187.34,
      contract_value: 156.89,
      contract_percent: 83.8,
      fact_value: 27.67,
      fact_percent: 14.8,
      objects_plan: 24,
      objects_fact: 6
    }
  ],
  // –ì–æ—Å—Å—Ç—Ä–æ–π–Ω–∞–¥–∑–æ—Ä
  gosstroinadzor: [
    {
      name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–Ω–∞–¥–∑–æ—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤',
      dynamic_text: '243 (+0)',
      dynamic_value: 243
    },
    {
      name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫',
      dynamic_text: '320 (+8)',
      dynamic_value: 320
    },
    {
      name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ø–∏—Å–∞–Ω–∏–π',
      dynamic_text: '52 (+0)',
      dynamic_value: 52
    },
    {
      name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–ª—é—á–µ–Ω–∏–π/–æ—Ç–∫–∞–∑–æ–≤',
      dynamic_text: '47 (+0)/16 (+1)'
    },
    {
      name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤',
      dynamic_text: '80 (+0)',
      dynamic_value: 80
    },
    {
      name: '–ü—Ä–∏–≤–ª–µ—á–µ–Ω–æ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏',
      dynamic_text: '31 (+3 —é.–ª.)/27 (+1 —é.–ª.)'
    },
    {
      name: '–°—É–º–º–∞ –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã—Ö –∏ –≤–∑—ã—Å–∫–∞–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤ (—Ç—ã—Å. —Ä—É–±.)',
      dynamic_text: '6520 (+150)/3630 (+75) - 56%',
      dynamic_value: 56
    },
    {
      name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞—â–µ–Ω–∏–π',
      dynamic_text: '107 (+6)/105 (+5) - 98%',
      dynamic_value: 98
    }
  ]
};

async function importData() {
  const client = await pool.connect();

  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤...\n');

    // –ü–æ–ª—É—á–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–º–µ–Ω –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∏—Ö ID
    for (const [catalogCode, items] of Object.entries(projectsData)) {
      console.log(`üì¶ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è: ${catalogCode}`);

      for (const item of items) {
        // –ù–∞–π–¥–µ–º ID –ø—Ä–æ–µ–∫—Ç–∞
        const itemResult = await client.query(`
          SELECT pi.id
          FROM projects_items pi
          INNER JOIN projects_catalog pc ON pi.catalog_id = pc.id
          WHERE pc.code = $1 AND pi.name = $2
        `, [catalogCode, item.name]);

        if (itemResult.rows.length === 0) {
          console.log(`  ‚ö†Ô∏è  –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${item.name}`);
          continue;
        }

        const itemId = itemResult.rows[0].id;

        // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–Ω—Ç—è–±—Ä—å 2025
        await client.query(`
          INSERT INTO projects_data (
            item_id, municipality_id, period_year, period_month,
            dynamic_text, dynamic_value, plan_text, plan_value,
            task_value, contract_value, contract_percent,
            fact_value, fact_percent, objects_plan, objects_fact
          ) VALUES ($1, NULL, 2025, 9, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)
          ON CONFLICT (item_id, municipality_id, period_year, period_month)
          DO UPDATE SET
            dynamic_text = EXCLUDED.dynamic_text,
            dynamic_value = EXCLUDED.dynamic_value,
            plan_text = EXCLUDED.plan_text,
            plan_value = EXCLUDED.plan_value,
            task_value = EXCLUDED.task_value,
            contract_value = EXCLUDED.contract_value,
            contract_percent = EXCLUDED.contract_percent,
            fact_value = EXCLUDED.fact_value,
            fact_percent = EXCLUDED.fact_percent,
            objects_plan = EXCLUDED.objects_plan,
            objects_fact = EXCLUDED.objects_fact
        `, [
          itemId,
          item.dynamic_text || null,
          item.dynamic_value || null,
          item.plan_text || null,
          item.plan_value || null,
          item.task_value || null,
          item.contract_value || null,
          item.contract_percent || null,
          item.fact_value || null,
          item.fact_percent || null,
          item.objects_plan || null,
          item.objects_fact || null
        ]);

        console.log(`  ‚úÖ ${item.name}`);
      }

      console.log('');
    }

    console.log('‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', err);
    throw err;
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫
importData().catch(err => {
  console.error('–§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
  process.exit(1);
});
